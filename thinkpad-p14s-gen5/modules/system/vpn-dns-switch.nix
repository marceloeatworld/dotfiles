# Automatic DNS switching for VPN
# When VPN is active: Use VPN DNS (Proton)
# When VPN is inactive: Use dnscrypt-proxy2 (Quad9)
{ config, pkgs, ... }:

{
  # NetworkManager dispatcher script for automatic DNS switching
  networking.networkmanager.dispatcherScripts = [
    {
      source = pkgs.writeShellScript "99-vpn-dns-switch" ''
        #!${pkgs.bash}/bin/bash
        # NetworkManager dispatcher script
        # $1 = interface name
        # $2 = action (up, down, vpn-up, vpn-down)

        PATH=${pkgs.networkmanager}/bin:${pkgs.systemd}/bin:${pkgs.openresolv}/bin:${pkgs.coreutils}/bin:${pkgs.gnugrep}/bin:$PATH

        INTERFACE="$1"
        ACTION="$2"

        # WireGuard is not treated as a VPN by NetworkManager, so we detect it by interface name
        case "$ACTION" in
          up)
            # Check if this is a Proton VPN (WireGuard) interface
            if [[ "$INTERFACE" == "proton"* ]]; then
              # ProtonVPN WireGuard is now active - get VPN DNS and configure it
              logger "VPN-DNS-SWITCH: Proton VPN activated on $INTERFACE - switching to VPN DNS"

              # Get DNS servers from the VPN connection
              VPN_DNS=$(nmcli -t -f IP4.DNS dev show "$INTERFACE" 2>/dev/null | cut -d: -f2 | tr '\n' ' ' | sed 's/ $//')

              if [ -n "$VPN_DNS" ]; then
                # Stop dnscrypt-proxy2
                systemctl stop dnscrypt-proxy2.service

                # Configure VPN DNS in resolv.conf
                echo "# VPN DNS (managed by VPN-DNS-SWITCH)" > /etc/resolv.conf
                for dns in $VPN_DNS; do
                  echo "nameserver $dns" >> /etc/resolv.conf
                done
                echo "options edns0" >> /etc/resolv.conf

                logger "VPN-DNS-SWITCH: Configured VPN DNS: $VPN_DNS"
              else
                logger "VPN-DNS-SWITCH: WARNING - No DNS from VPN, keeping dnscrypt-proxy2 active"
              fi
            else
              # Regular connection up - ensure dnscrypt-proxy2 is running if no VPN active
              VPN_ACTIVE=$(nmcli -t -f DEVICE connection show --active | grep -E "^proton" || true)
              if [ -z "$VPN_ACTIVE" ]; then
                if ! systemctl is-active --quiet dnscrypt-proxy2.service; then
                  logger "VPN-DNS-SWITCH: No VPN active - ensuring dnscrypt-proxy2 is running"
                  systemctl start dnscrypt-proxy2.service
                  # Restore localhost DNS
                  echo "# Generated by VPN-DNS-SWITCH" > /etc/resolv.conf
                  echo "nameserver 127.0.0.1" >> /etc/resolv.conf
                  echo "nameserver ::1" >> /etc/resolv.conf
                  echo "options edns0" >> /etc/resolv.conf
                fi
              fi
            fi
            ;;

          down)
            # Check if this is a Proton VPN (WireGuard) interface being disconnected
            if [[ "$INTERFACE" == "proton"* ]]; then
              # ProtonVPN WireGuard is now inactive - restart dnscrypt-proxy2 for Quad9
              logger "VPN-DNS-SWITCH: Proton VPN deactivated on $INTERFACE - switching to Quad9 DNS"

              # Restore localhost DNS
              echo "# Generated by VPN-DNS-SWITCH" > /etc/resolv.conf
              echo "nameserver 127.0.0.1" >> /etc/resolv.conf
              echo "nameserver ::1" >> /etc/resolv.conf
              echo "options edns0" >> /etc/resolv.conf

              # Start dnscrypt-proxy2
              systemctl start dnscrypt-proxy2.service

              logger "VPN-DNS-SWITCH: Restored Quad9 DNS (127.0.0.1)"
            fi
            ;;
        esac
      '';
      type = "basic";
    }
  ];
}
